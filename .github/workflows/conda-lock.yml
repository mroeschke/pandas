# Mirrors: https://github.com/ibis-project/ibis/blob/master/.github/workflows/conda-lock.yml
name: Generate Conda Lockfiles

on: [push]
#on:
#  schedule:
#    # At minute 30 past every 24th hour
#    - cron: "30 */24 * * *"
#  workflow_dispatch:
#  repository_dispatch:
#    types:
#      - condalock-command

jobs:
  condalock:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - "3.8"
          - "3.9"
          - "3.10"
      fail-fast: false
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          repository: ${{ github.event.client_payload.pull_request.head.repo.full_name }}
          ref: ${{ github.event.client_payload.pull_request.head.ref }}

      - name: Setup Miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          mamba-version: "*"
          miniforge-version: latest
          miniforge-variant: Mambaforge
          activate-environment: conda-lock
          python-version: ${{ matrix.python-version }}
          condarc-file: ci/condarc

      - name: Install conda-lock
        run: mamba install 'conda-lock <1.0'

      - name: Modify pyproject.toml Dynamically for Lock File Generation
        run: |
          sed -i 's/requires = \[/requires = \["poetry-core>=1",/' pyproject.toml
          sed -i 's/^python = .*/python = "=${{ matrix.python-version }}"/' pyproject.toml
          sed -i 's/^# build-backend = .*/build-backend = "poetry.core.masonry.api"/' pyproject.toml

      - name: Generate Lock Files
        run: |
          set -euo pipefail
          mkdir -p conda-lock
          template='conda-lock/{platform}-${{ matrix.python-version }}.lock'
          conda lock \
            --kind explicit \
            --file pyproject.toml \
            --platform linux-64 \
            --platform osx-64 \
            --platform win-64 \
            --platform linux-aarch64 \
            --filename-template "${template}" \
            --extras optional_dependencies \
            --extras code_checks \
            --extras testing_ci \
            --extras testing_local \
            --extras downsteam_tests \
            --extras asv \
            --extras docs \
            --extras website \
            --dev-dependencies \
            --mamba

          # No ARM support for pytorch, pyreadstat, asv, google-cloud-bigquery-core
          conda lock \
            --kind explicit \
            --file pyproject.toml \
            --platform linux-aarch64 \
            --filename-template "${template}" \
            --extras testing_ci \
            --mamba

      - name: Generate PyPy Lock File
        run: |
          set -euo pipefail
          sed -i 's/^python = "=${{ matrix.python-version }}"/python = "=${{ matrix.python-version }}[build=*_pypy]"/' pyproject.toml
          mkdir -p conda-lock
          template='conda-lock/{platform}-${{ matrix.python-version }}-pypy.lock'
          conda lock \
            --kind explicit \
            --file pyproject.toml \
            --platform linux-64 \
            --filename-template "${template}" \
            --extras testing_ci \
            --mamba

      - name: Test Linux Environment Creation with Lock File
        run: mamba create --name test --file conda-lock/linux-64-${{ matrix.python-version }}.lock

      - name: Upload Conda Lock files
        uses: actions/upload-artifact@v3
        with:
          name: conda-lock-files-${{ github.run_attempt }}
          path: conda-lock/*-${{ matrix.python-version }}.lock

  condalock_pr:
    #if: ${{ github.event_name == 'schedule' || github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    needs:
      - condalock
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Download Conda Lock Files
        uses: actions/download-artifact@v3
        with:
          name: conda-lock-files-${{ github.run_attempt }}
          path: conda-lock

      # TODO: Investigate if actions/github-script@v6 below can be used.
      - name: Git Commit Lock files
        run: |
          git config --global user.email "conda-lock[bot]@users.noreply.github.com"
          git config --global user.name "conda-lock[bot]"
          git checkout -b create-pull-request/conda-relock
          git add conda-lock/*.lock
          git commit -m"Relock conda-lock files"
          git push origin create-pull-request/conda-relock

      - name: Create Pull Request
        uses: actions/github-script@v6
        with:
          script: |
            const { repo, owner } = context.repo;
            const result = await github.rest.pulls.create({
              title: '[CI/DEPS] Update Conda Lock Files',
              owner,
              repo,
              head: 'create-pull-request/conda-relock',
              base: 'main'
            });
            github.rest.issues.addLabels({
              owner,
              repo,
              issue_number: result.data.number,
              labels: ['CI', 'Dependencies']
            });

#  condalock_pr:
#    if: ${{ github.event_name == 'schedule' || github.event_name == 'workflow_dispatch' }}
#    runs-on: ubuntu-latest
#    needs:
#      - condalock
#    steps:
#      - uses: tibdex/github-app-token@v1
#        id: generate_pr_token
#        with:
#          app_id: ${{ secrets.SQUAWK_BOT_APP_ID }}
#          private_key: ${{ secrets.SQUAWK_BOT_APP_PRIVATE_KEY }}
#
#      - uses: tibdex/github-app-token@v1
#        id: generate_pr_approval_token
#        with:
#          app_id: ${{ secrets.PR_APPROVAL_BOT_APP_ID }}
#          private_key: ${{ secrets.PR_APPROVAL_BOT_APP_PRIVATE_KEY }}
#
#      - uses: actions/checkout@v3
#        with:
#          token: ${{ steps.generate_pr_token.outputs.token }}
#
#      - name: download conda lock files
#        uses: actions/download-artifact@v3
#        with:
#          name: conda-lock-files-${{ github.run_attempt }}
#          path: conda-lock
#
#      - uses: peter-evans/create-pull-request@v4
#        id: create_pr
#        with:
#          token: ${{ steps.generate_pr_token.outputs.token }}
#          commit-message: "chore(conda-lock): relock"
#          branch: "create-pull-request/conda-relock"
#          delete-branch: true
#          add-paths: conda-lock/*.lock
#          committer: "ibis-squawk-bot[bot] <ibis-squawk-bot[bot]@users.noreply.github.com>"
#          author: "ibis-squawk-bot[bot] <ibis-squawk-bot[bot]@users.noreply.github.com>"
#          title: "chore(conda-lock): relock"
#          body: "Relock conda-lock environment files"
#          labels: |
#            dependencies
#            autorebase:opt-in
#
#      - uses: juliangruber/approve-pull-request-action@v1.1.1
#        if: ${{ steps.create_pr.outputs.pull-request-operation == 'created' }}
#        with:
#          github-token: ${{ steps.generate_pr_approval_token.outputs.token }}
#          number: ${{ steps.create_pr.outputs.pull-request-number }}
#
#      - uses: peter-evans/enable-pull-request-automerge@v2
#        if: ${{ steps.create_pr.outputs.pull-request-operation == 'created' }}
#        with:
#          token: ${{ steps.generate_pr_token.outputs.token }}
#          pull-request-number: ${{ steps.create_pr.outputs.pull-request-number }}
#          merge-method: rebase
#
#  condalock_push:
#    if: ${{ github.event_name == 'repository_dispatch' }}
#    runs-on: ubuntu-latest
#    needs:
#      - condalock
#    steps:
#      - uses: tibdex/github-app-token@v1
#        id: generate_token
#        with:
#          app_id: ${{ secrets.SQUAWK_BOT_APP_ID }}
#          private_key: ${{ secrets.SQUAWK_BOT_APP_PRIVATE_KEY }}
#
#      - uses: actions/checkout@v3
#        with:
#          token: ${{ steps.generate_token.outputs.token }}
#          repository: ${{ github.event.client_payload.pull_request.head.repo.full_name }}
#          ref: ${{ github.event.client_payload.pull_request.head.ref }}
#
#      - name: download conda lock files
#        uses: actions/download-artifact@v3
#        with:
#          name: conda-lock-files-${{ github.run_attempt }}
#          path: conda-lock
#
#      - name: Configure git info
#        run: |
#          set -euo pipefail
#
#          git config --global user.name 'ibis-squawk-bot[bot]'
#          git config --global user.email 'ibis-squawk-bot[bot]@users.noreply.github.com'
#
#      - name: commit lock files and push to PR
#        run: |
#          set -euo pipefail
#
#          git add conda-lock/*.lock
#
#          if git commit -m 'chore(conda-lock): relock'; then
#            # pull in case another commit happened in the meantime
#            #
#            # `ours` is actually the *other* changeset, not the current branch, per
#            # https://stackoverflow.com/a/3443225/564538
#            git pull --rebase -s recursive -X ours
#            git push
#          fi
#
#      - name: react on success
#        uses: peter-evans/create-or-update-comment@v2
#        with:
#          token: ${{ secrets.GITHUB_TOKEN }}
#          repository: ${{ github.event.client_payload.github.payload.repository.full_name }}
#          comment-id: ${{ github.event.client_payload.github.payload.comment.id }}
#          reaction-type: hooray
