[build-system]
# Minimum requirements for the build system to execute.
# See https://github.com/scipy/scipy/pull/12940 for the AIX issue.
requires = [
    "setuptools>=51.0.0",
    "wheel",
    "Cython>=0.29.24,<3",  # Note: sync with setup.py, environment.yml and asv.conf.json
    "oldest-supported-numpy>=0.10"
]
# uncomment to enable pep517 after versioneer problem is fixed.
# https://github.com/python-versioneer/python-versioneer/issues/193
# build-backend = "setuptools.build_meta"

[tool.black]
target-version = ['py38', 'py39']
exclude = '''
(
    asv_bench/env
  | \.egg
  | \.git
  | \.hg
  | \.mypy_cache
  | \.nox
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | setup.py
)
'''

[tool.pytest.ini_options]
# sync minversion with pyproject.toml & install.rst
minversion =  "6.0"
addopts = "--strict-data-files --strict-markers --strict-config --capture=no --durations=30 --junitxml=test-data.xml"
xfail_strict = true
testpaths = "pandas"
doctest_optionflags = [
  "NORMALIZE_WHITESPACE",
  "IGNORE_EXCEPTION_DETAIL",
  "ELLIPSIS",
]
filterwarnings = [
  "error:Sparse:FutureWarning",
  "error:The SparseArray:FutureWarning",
]
junit_family = "xunit2"
markers = [
  "single_cpu: tests that should run on a single cpu only",
  "slow: mark a test as slow",
  "network: mark a test as network",
  "db: tests requiring a database (mysql or postgres)",
  "clipboard: mark a pd.read_clipboard test",
  "arm_slow: mark a test as slow for arm64 architecture",
  "arraymanager: mark a test to run with ArrayManager enabled",
]
asyncio_mode = "strict"

[tool.mypy]
# Import discovery
mypy_path = "typings"
files = ["pandas", "typings"]
namespace_packages = false
explicit_package_bases = false
ignore_missing_imports = true
follow_imports = "normal"
follow_imports_for_stubs = false
no_site_packages = false
no_silence_site_packages = false
# Platform configuration
python_version = "3.8"
platform = "linux-64"
# Disallow dynamic typing
disallow_any_unimported = false # TODO
disallow_any_expr = false # TODO
disallow_any_decorated = false # TODO
disallow_any_explicit = false # TODO
disallow_any_generics = false # TODO
disallow_subclassing_any = false # TODO
# Untyped definitions and calls
disallow_untyped_calls = false # TODO
disallow_untyped_defs = false # TODO
disallow_incomplete_defs = false # TODO
check_untyped_defs = true
disallow_untyped_decorators = true
# None and Optional handling
no_implicit_optional = true
strict_optional = true
# Configuring warnings
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_return_any = false # TODO
warn_unreachable = false # GH#27396
# Suppressing errors
show_none_errors = true
ignore_errors = false
enable_error_code = "ignore-without-code"
# Miscellaneous strictness flags
allow_untyped_globals = false
allow_redefinition = false
local_partial_types = false
implicit_reexport = true
strict_equality = true
# Configuring error messages
show_error_context = false
show_column_numbers = false
show_error_codes = true

[[tool.mypy.overrides]]
module = [
  "pandas.tests.*",
  "pandas._version",
  "pandas.io.clipboard",
]
check_untyped_defs = false

[[tool.mypy.overrides]]
module = [
  "pandas.tests.apply.test_series_apply",
  "pandas.tests.arithmetic.conftest",
  "pandas.tests.arrays.sparse.test_combine_concat",
  "pandas.tests.dtypes.test_common",
  "pandas.tests.frame.methods.test_to_records",
  "pandas.tests.groupby.test_rank",
  "pandas.tests.groupby.transform.test_transform",
  "pandas.tests.indexes.interval.test_interval",
  "pandas.tests.indexing.test_categorical",
  "pandas.tests.io.excel.test_writers",
  "pandas.tests.reductions.test_reductions",
  "pandas.tests.test_expressions",
]
ignore_errors = true

# To be kept consistent with "Import Formatting" section in contributing.rst
[tool.isort]
known_pre_libs = "pandas._config"
known_pre_core = ["pandas._libs", "pandas._typing", "pandas.util._*", "pandas.compat", "pandas.errors"]
known_dtypes = "pandas.core.dtypes"
known_post_core = ["pandas.tseries", "pandas.io", "pandas.plotting"]
sections = ["FUTURE", "STDLIB", "THIRDPARTY" ,"PRE_LIBS" , "PRE_CORE", "DTYPES", "FIRSTPARTY", "POST_CORE", "LOCALFOLDER"]
profile = "black"
combine_as_imports = true
force_grid_wrap = 2
force_sort_within_sections = true
skip_glob = "env"
skip = "pandas/__init__.py"

[tool.pyright]
pythonVersion = "3.8"
typeCheckingMode = "basic"
include = ["pandas", "typings"]
exclude = ["pandas/tests", "pandas/io/clipboard", "pandas/util/version"]
# enable subset of "strict"
reportDuplicateImport = true
reportInvalidStubStatement = true
reportOverlappingOverload = true
reportPropertyTypeMismatch = true
reportUntypedClassDecorator = true
reportUntypedFunctionDecorator = true
reportUntypedNamedTuple = true
# disable subset of "basic"
reportGeneralTypeIssues = false
reportMissingModuleSource = false
reportOptionalCall = false
reportOptionalIterable = false
reportOptionalMemberAccess = false
reportOptionalOperand = false
reportOptionalSubscript = false
reportPrivateImportUsage = false
reportUnboundVariable = false
reportUnsupportedDunderAll = false

[tool.conda-lock]
channels = ['conda-forge', 'defaults']

[tool.poetry.dependencies]
python = ">=3.8,<3.11"
python-dateutil = ">=2.8.1,<3"
numpy = ">=1.18.5,<2"
pytz = ">=2020.1"
beautifulsoup4 = { version = ">=4.8.2", optional = true }
blosc = { version = ">=1.20.1", optional = true }
bottleneck = { version = ">=1.3.1", optional = true }
brotlipy = { version = ">=0.7.0", optional = true }
fastparquet = { version = ">=0.4.0", optional = true }
fsspec = { version = ">=0.7.4", optional = true }
html5lib = { version = ">=1.1", optional = true }
hypothesis = { version = ">=5.5.3", optional = true }
gcsfs = { version = ">=0.6.0", optional = true }
jinja2 = { version = ">=2.11", optional = true }
lxml = { version = ">=4.5.0", optional = true }
markupsafe = { version = ">=2.0.1", optional = true }
matplotlib = { version = ">=3.3.2", optional = true }
numba = { version = ">=0.50.1", optional = true }
numexpr = { version = ">=2.7.1", optional = true }
odfpy = { version = ">=1.4.1", optional = true }
openpyxl = { version = ">=3.0.3", optional = true }
pandas-gbq = { version = ">=0.14.0", optional = true }
psycopg2 = { version = ">=2.11", optional = true }
pyarrow = { version = ">=1.0.1", optional = true }
pymysql = { version = ">=0.10.1", optional = true }
pyreadstat = { version = ">=1.1.0", optional = true }
pytables = { version = ">=3.6.1", optional = true }
python-snappy = { version = ">=0.6.0", optional = true }
pyxlsb = { version = ">=1.0.6", optional = true }
s3fs = { version = ">=0.4.0", optional = true }
scipy = { version = ">=1.4.1", optional = true }
sqlalchemy = { version = ">=1.4.0", optional = true }
tabulate = { version = ">=0.8.7", optional = true }
xarray = { version = ">=0.15.1", optional = true }
xlrd = { version = ">=2.0.1", optional = true }
xlsxwriter = { version = ">=1.2.2", optional = true }
xlwt = { version = ">=1.3.0", optional = true }
zstandard = { version = ">=0.15.2", optional = true }

[tool.poetry.dev-dependencies]
cython = "=0.29.24"
pytest = ">=6.0,<7"
pytest-cov = ">=3.0,<4"
pytest-xdist = ">=2.5,<3"
psutil = ">=5.9,<6"
pytest-asyncio = ">=0.18,<1"
boto3 = ">=1.23,<2"
